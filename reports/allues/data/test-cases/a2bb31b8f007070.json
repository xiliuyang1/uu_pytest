{"uid":"a2bb31b8f007070","name":"获取高级福利豆箱基本信息","fullName":"testcases.test_boxs.TestBoxs#test_welfare_box_info","historyId":"2d749d63b2e9f9a88e447f2ec4166790","time":{"start":1687676268434,"stop":1687676268712,"duration":278},"status":"broken","statusMessage":"ValueError: not enough values to unpack (expected 2, got 1)","statusTrace":"self = <testcases.test_boxs.TestBoxs object at 0x000001DA0D7C97B0>\ncaseinfo = {'datas': {'code': 'WELFARE_BEAN_CASES1'}, 'method': 'get', 'name': '获取高级福利豆箱基本信息', 'url': '/api/activity/lucky/info', ...}\n\n    @pytest.mark.parametrize(\"caseinfo\", read_yaml(\"/test_activity/welfare_box_info.yml\"))\n    def test_welfare_box_info(self, caseinfo):\n        allure.dynamic.title(caseinfo['name'])\n        name = caseinfo['name']\n        method = caseinfo['method']\n        url = caseinfo['url']\n        datas = caseinfo['datas']\n        verify = caseinfo['verify']\n>       RequestsUtil().send_request(testcasename=name, method=method, url=url, data=datas, verify=verify)\n\ntestcases\\test_boxs.py:92: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nutils\\requests_util.py:31: in send_request\n    RequestsUtil().set_verify_result(res, verify, testcasename=testcasename)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <utils.requests_util.RequestsUtil object at 0x000001DA0B145D50>\nres = <Response [200]>, verify = [{'contain': {'$..data': 'is_first'}}]\ntestcasename = '获取高级福利豆箱基本信息'\n\n    def set_verify_result(self, res=None, verify=None, testcasename=None):\n        if verify is not None:\n>           for key, value in verify:\nE           ValueError: not enough values to unpack (expected 2, got 1)\n\nutils\\requests_util.py:42: ValueError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"setup","time":{"start":1687676250014,"stop":1687676251069,"duration":1055},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false}],"testStage":{"status":"broken","statusMessage":"ValueError: not enough values to unpack (expected 2, got 1)","statusTrace":"self = <testcases.test_boxs.TestBoxs object at 0x000001DA0D7C97B0>\ncaseinfo = {'datas': {'code': 'WELFARE_BEAN_CASES1'}, 'method': 'get', 'name': '获取高级福利豆箱基本信息', 'url': '/api/activity/lucky/info', ...}\n\n    @pytest.mark.parametrize(\"caseinfo\", read_yaml(\"/test_activity/welfare_box_info.yml\"))\n    def test_welfare_box_info(self, caseinfo):\n        allure.dynamic.title(caseinfo['name'])\n        name = caseinfo['name']\n        method = caseinfo['method']\n        url = caseinfo['url']\n        datas = caseinfo['datas']\n        verify = caseinfo['verify']\n>       RequestsUtil().send_request(testcasename=name, method=method, url=url, data=datas, verify=verify)\n\ntestcases\\test_boxs.py:92: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nutils\\requests_util.py:31: in send_request\n    RequestsUtil().set_verify_result(res, verify, testcasename=testcasename)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <utils.requests_util.RequestsUtil object at 0x000001DA0B145D50>\nres = <Response [200]>, verify = [{'contain': {'$..data': 'is_first'}}]\ntestcasename = '获取高级福利豆箱基本信息'\n\n    def set_verify_result(self, res=None, verify=None, testcasename=None):\n        if verify is not None:\n>           for key, value in verify:\nE           ValueError: not enough values to unpack (expected 2, got 1)\n\nutils\\requests_util.py:42: ValueError","steps":[],"attachments":[{"uid":"fee15a91c747ab0b","name":"log","source":"fee15a91c747ab0b.txt","type":"text/plain","size":6236}],"parameters":[],"hasContent":true,"stepsCount":0,"attachmentsCount":1,"shouldDisplayMessage":true},"afterStages":[{"name":"setup::0","time":{"start":1687676280833,"stop":1687676280833,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false}],"labels":[{"name":"feature","value":"饰品盲盒模块"},{"name":"parentSuite","value":"testcases"},{"name":"suite","value":"test_boxs"},{"name":"subSuite","value":"TestBoxs"},{"name":"host","value":"DESKTOP-CM07T3T"},{"name":"thread","value":"10092-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"testcases.test_boxs"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"caseinfo","value":"{'name': '获取高级福利豆箱基本信息', 'method': 'get', 'url': '/api/activity/lucky/info', 'datas': {'code': 'WELFARE_BEAN_CASES1'}, 'verify': [{'contain': {'$..data': 'is_first'}}]}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"a2bb31b8f007070.json","parameterValues":["{'name': '获取高级福利豆箱基本信息', 'method': 'get', 'url': '/api/activity/lucky/info', 'datas': {'code': 'WELFARE_BEAN_CASES1'}, 'verify': [{'contain': {'$..data': 'is_first'}}]}"]}
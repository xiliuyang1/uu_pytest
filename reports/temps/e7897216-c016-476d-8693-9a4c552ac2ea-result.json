{"name": "开启超级福利豆箱", "status": "failed", "statusDetails": {"message": "pytest_assume.plugin.FailedAssumption: \nOriginal Failure:\n\n>> TypeError('can only concatenate str (not \"dict\") to str')\n\n1 Failed Assumptions:\n\nutils\\requests_util.py:53: AssumptionFailure\n>>\tpytest.assume(False)\nAssertionError: assert False", "trace": "self = <testcases.test_boxs.TestBoxs object at 0x0000021FF934FE50>\ncaseinfo = {'datas': {'lucky_id': 1123075254347735040}, 'headers': {'Content-Type': 'application/x-www-form-urlencoded;charset=UTF-8', 'token': 'dbbb2ef738375774c2ce6ce88ac619cc'}, 'method': 'post', 'name': '开启超级福利豆箱', ...}\n\n    @pytest.mark.parametrize(\"caseinfo\", read_yaml(\"/test_activity/open_welfare_box.yml\"))\n    def test_open_welfare_box(self, caseinfo):\n        allure.dynamic.title(caseinfo['name'])\n        name = caseinfo['name']\n        method = caseinfo['method']\n        url = caseinfo['url']\n        headers = read_variable_yaml(caseinfo['headers'])\n        datas = caseinfo['datas']\n        verify = caseinfo['verify']\n>       RequestsUtil().send_request(testcasename=name, method=method, url=url, headers=headers, data=datas,\n                                    verify=verify)\n\ntestcases\\test_boxs.py:149: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nutils\\requests_util.py:35: in send_request\n    RequestsUtil().set_verify_result(res, verify, testcasename=testcasename)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <utils.requests_util.RequestsUtil object at 0x0000021FF9EC33D0>\nres = <Response [200]>, verify = [{'not null': {'$..zh-CN': 1}}]\ntestcasename = '开启超级福利豆箱'\n\n    def set_verify_result(self, res=None, verify=None, testcasename=None):\n        if verify is None:\n            pass\n        if verify is not None:\n            for validateitem in verify:\n                for key in validateitem.keys():\n                    # 获取断言的预期结果：\n                    validatelist = validateitem[key]\n                    if isinstance(validatelist, dict):\n                        for verify_key, verify_value in validatelist.items():\n                            # 获取响应数据中各字段的实际响应值：（json提取器）\n                            result_value = jsonpath.jsonpath(res.json(), verify_key)\n                            if not result_value:\n                                pytest.assume(False)\n                                my_logging.error(\n>                                   \"【\" + testcasename + \"】接口断言失败，响应数据中未查询到断言对象。响应结果为：\" + res.json())\nE                               pytest_assume.plugin.FailedAssumption: \nE                               Original Failure:\nE                               \nE                               >> TypeError('can only concatenate str (not \"dict\") to str')\nE                               \nE                               1 Failed Assumptions:\nE                               \nE                               utils\\requests_util.py:53: AssumptionFailure\nE                               >>\tpytest.assume(False)\nE                               AssertionError: assert False\n\nutils\\requests_util.py:55: FailedAssumption"}, "attachments": [{"name": "log", "source": "adf70e37-dda6-4740-b981-62cc40eacd8a-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "caseinfo", "value": "{'name': '开启超级福利豆箱', 'method': 'post', 'url': '/api/activity/lucky/open', 'headers': {'Content-Type': 'application/x-www-form-urlencoded;charset=UTF-8', 'token': '{{token()}}'}, 'datas': {'lucky_id': 1123075254347735040}, 'verify': [{'not null': {'$..zh-CN': 1}}]}"}], "start": 1688093088988, "stop": 1688093089073, "uuid": "1b154850-5dcf-41dd-a830-8baa52b319df", "historyId": "c883a0d540946475858b24ee79472f7f", "testCaseId": "bbeae77a0c08b9f51f892b63f84c06a6", "fullName": "testcases.test_boxs.TestBoxs#test_open_welfare_box", "labels": [{"name": "feature", "value": "饰品盲盒模块"}, {"name": "parentSuite", "value": "testcases"}, {"name": "suite", "value": "test_boxs"}, {"name": "subSuite", "value": "TestBoxs"}, {"name": "host", "value": "DESKTOP-CM07T3T"}, {"name": "thread", "value": "18112-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "testcases.test_boxs"}]}